---
http_interactions:
- request:
    method: post
    uri: https://jcl49wv5ar-dsn.algolia.net/1/indexes/all_en/query
    body:
      encoding: UTF-8
      string: '{"query":"ISO/IEC 8824-1","hitsPerPage":100,"filters":"category:standard"}'
    headers:
      User-Agent:
      - Algolia for Ruby (2.2.5), Ruby (3.0.0)
      X-Algolia-Api-Key:
      - dd1b9e1ab383f4d4817d29cd5e96d3f0
      X-Algolia-Application-Id:
      - JCL49WV5AR
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Fri, 29 Jul 2022 11:00:50 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Alg-Pt:
      - '1'
      Accept-Encoding:
      - deflate, gzip
      Cache-Control:
      - no-store
      Access-Control-Allow-Origin:
      - "*"
      Timing-Allow-Origin:
      - "*"
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Disposition:
      - inline; filename=a.txt
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 29 Jul 2022 11:00:50 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/06/83/68350.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=730354058.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=3DFF5554FB0EE8792B064AF144405417; Path=/; Secure; HttpOnly
      Location:
      - "/standard/68350.html"
      Content-Length:
      - '0'
      Date:
      - Fri, 29 Jul 2022 11:00:54 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Fri, 29 Jul 2022 11:00:54 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/68350.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=730354058.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=77FFB11E84DC8080E031FB049F761113; Path=/; Secure; HttpOnly
      Vary:
      - accept-encoding
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Fri, 29 Jul 2022 11:00:55 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 29 Jul 2022 11:00:55 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/68350.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=730354058.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=94B5D49118376096DE03D84B381ADDCA; Path=/; Secure; HttpOnly
      Vary:
      - accept-encoding
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Fri, 29 Jul 2022 11:00:56 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImZyIj4KICA8aGVhZD48bGluayByZWw9ImNhbm9uaWNhbCIgaHJlZj0iaHR0cHM6Ly93d3cuaXNvLm9yZy9mci9zdGFuZGFyZC82ODM1MC5odG1sIiAvPgo8bGluayByZWw9ImFsdGVybmF0ZSIgaHJlZmxhbmc9ImVuIiBocmVmPSJodHRwczovL3d3dy5pc28ub3JnL3N0YW5kYXJkLzY4MzUwLmh0bWwiIC8+CiAgICA8c2NyaXB0PgogICAgICBkYXRhTGF5ZXIgPSBbewogICAgICAgICdwYWdlVHlwZSc6ICdpdHM6c3RhbmRhcmQnLAogICAgICAgICdwYWdlTGFuZ3VhZ2UnOiAnZnInCiAgICAgIH1dOwogICAgPC9zY3JpcHQ+CgogICAgPCEtLSBPbmVUcnVzdCBDb29raWVzIENvbnNlbnQgTm90aWNlIHN0YXJ0IGZvciB3d3cuaXNvLm9yZyAtLT4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly9jZG4uY29va2llbGF3Lm9yZy9jb25zZW50LzA5NjQ0OTNhLWIzOTYtNDY4NS05MTUwLTE4Zjc0OWFiZmJmYi9PdEF1dG9CbG9jay5qcyIgPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG4uY29va2llbGF3Lm9yZy9zY3JpcHR0ZW1wbGF0ZXMvb3RTREtTdHViLmpzIiBkYXRhLWRvY3VtZW50LWxhbmd1YWdlPSJ0cnVlIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGNoYXJzZXQ9IlVURi04IiBkYXRhLWRvbWFpbi1zY3JpcHQ9IjA5NjQ0OTNhLWIzOTYtNDY4NS05MTUwLTE4Zjc0OWFiZmJmYiIgPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+Ci8vIGZ1bmN0aW9uIHRvIHB1bGwgY29va2llIHZhbHVlCmZ1bmN0aW9uIGdldENvb2tpZShuYW1lKSB7CiAgICB2YXIgdmFsdWUgPSAiOyAiICsgZG9jdW1lbnQuY29va2llOwogICAgdmFyIHBhcnRzID0gdmFsdWUuc3BsaXQoIjsgIiArIG5hbWUgKyAiPSIpOwogICAgaWYgKHBhcnRzLmxlbmd0aCA9PSAyKSByZXR1cm4gcGFydHMucG9wKCkuc3BsaXQoIjsiKS5zaGlmdCgpOwp9CgpmdW5jdGlvbiBPcHRhbm9uV3JhcHBlcigpIHsKICAgIGNvbnNvbGUubG9nKCJPcHRhbm9uV3JhcHBlciBjYWxsZWQiKTsKCiAgICB2YXIgT0FCQ2Nvb2tpZU5hbWUgPSAiT3B0YW5vbkFsZXJ0Qm94Q2xvc2VkIjsKICAgIHZhciBiYW5uZXJBY2NlcHRCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgib25ldHJ1c3QtYWNjZXB0LWJ0bi1oYW5kbGVyIik7CiAgICB2YXIgcGNBbGxvd0FsbEJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhY2NlcHQtcmVjb21tZW5kZWQtYnRuLWhhbmRsZXIiKTsKICAgIHZhciBwY1NhdmVCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJzYXZlLXByZWZlcmVuY2UtYnRuLWhhbmRsZXIgb25ldHJ1c3QtY2xvc2UtYnRuLWhhbmRsZXIgYnV0dG9uLXRoZW1lIilbMF07CiAgICB2YXIgT0FCQ2Nvb2tpZSA9IGdldENvb2tpZShPQUJDY29va2llTmFtZSk7CgogICAgLy8gSUYgbG9naWMgbmVlZGVkIGhlcmUgYmVjYXVzZSBvdC1iYW5uZXItc2RrIERJViBpcyBub3QgaW5qZWN0ZWQgb24gcGFnZSBsb2FkcyBpZiBiYW5uZXIgaXMgbm90IGV4cG9zZWQKCiAgICBpZiAoIU9BQkNjb29raWUgJiYgYmFubmVyQWNjZXB0QnRuKSB7CiAgICAgICAgYmFubmVyQWNjZXB0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOwogICAgICAgIH0pOwogICAgfQogICAgaWYgKHBjQWxsb3dBbGxCdG4pCiAgICAgICAgcGNBbGxvd0FsbEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkgewogICAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgICB9KTsKCiAgICBwY1NhdmVCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpIHsKICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTsKICAgIH0pOwp9Cjwvc2NyaXB0Pgo8IS0tIE9uZVRydXN0IENvb2tpZXMgQ29uc2VudCBOb3RpY2UgZW5kIGZvciB3d3cuaXNvLm9yZyAtLT4KCjwhLS0gSG90amFyIFRyYWNraW5nIENvZGUgZm9yIHd3dy5pc28ub3JnIC0tPgo8c2NyaXB0IHR5cGU9InRleHQvcGxhaW4iIGNsYXNzPSJvcHRhbm9uLWNhdGVnb3J5LUMwMDAzIj4KICAgIChmdW5jdGlvbihoLG8sdCxqLGEscil7CiAgICAgICAgaC5oaj1oLmhqfHxmdW5jdGlvbigpeyhoLmhqLnE9aC5oai5xfHxbXSkucHVzaChhcmd1bWVudHMpfTsKICAgICAgICBoLl9oalNldHRpbmdzPXtoamlkOjI1MTA4MDUsaGpzdjo2fTsKICAgICAgICBhPW8uZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXTsKICAgICAgICByPW8uY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7ci5hc3luYz0xOwogICAgICAgIHIuc3JjPXQraC5faGpTZXR0aW5ncy5oamlkK2oraC5faGpTZXR0aW5ncy5oanN2OwogICAgICAgIGEuYXBwZW5kQ2hpbGQocik7CiAgICB9KSh3aW5kb3csZG9jdW1lbnQsJ2h0dHBzOi8vc3RhdGljLmhvdGphci5jb20vYy9ob3RqYXItJywnLmpzP3N2PScpOwo8L3NjcmlwdD48IS0tIEdvb2dsZSBUYWcgTWFuYWdlciAtLT4KICAgICAgPHNjcmlwdD4oZnVuY3Rpb24odyxkLHMsbCxpKXt3W2xdPXdbbF18fFtdO3dbbF0ucHVzaCh7J2d0bS5zdGFydCc6CiAgICAgICAgICBuZXcgRGF0ZSgpLmdldFRpbWUoKSxldmVudDonZ3RtLmpzJ30pO3ZhciBmPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF0sCiAgICAgICAgaj1kLmNyZWF0ZUVsZW1lbnQocyksZGw9bCE9J2RhdGFMYXllcic/JyZsPScrbDonJztqLmFzeW5jPXRydWU7ai5zcmM9CiAgICAgICAgJ2h0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL2d0bS5qcz9pZD0nK2krZGw7Zi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShqLGYpOwogICAgICB9KSh3aW5kb3csZG9jdW1lbnQsJ3NjcmlwdCcsJ2RhdGFMYXllcicsJ0dUTS1URkdLUVFCJyk7PC9zY3JpcHQ+CiAgICAgIDwhLS0gRW5kIEdvb2dsZSBUYWcgTWFuYWdlciAtLT4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI+CiAgICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPWVkZ2UiPgogICAgPHRpdGxlPklTTyAtIElTTy9JRUMgODgyNC0xOjIwMTUgLSBUZWNobm9sb2dpZXMgZGUgbCYjMDM5O2luZm9ybWF0aW9uIOKAlCBOb3RhdGlvbiBkZSBzeW50YXhlIGFic3RyYWl0ZSBudW3DqXJvIHVuIChBU04uMSk6IFNww6ljaWZpY2F0aW9uIGRlIGxhIG5vdGF0aW9uIGRlIGJhc2Ug4oCUIFBhcnRpZSAxOjwvdGl0bGU+CgogICAgPCEtLQogICAgICA8bGluayByZWw9InByZWNvbm5lY3QiIGhyZWY9Imh0dHBzOi8vY2RuLmlzby5vcmcvIiBjcm9zc29yaWdpbiAvPgogICAgICA8bGluayByZWw9InByZWxvYWQiIGFzPSJzY3JpcHQiIGhyZWY9Imh0dHBzOi8vY2RuLmlzby5vcmcvcmVzb3VyY2VzL3dvb2QvMy4zLjcvd29vZC5mdWxsLm1pbi5qcyIgY3Jvc3NvcmlnaW4gLz4KICAgICAgPGxpbmsgcmVsPSJwcmVsb2FkIiBhcz0ic3R5bGUiIGhyZWY9Imh0dHBzOi8vY2RuLmlzby5vcmcvcmVzb3VyY2VzL3dvb2QvMy4zLjcvd29vZC5mdWxsLm1pbi5jc3MiIGNyb3Nzb3JpZ2luIC8+CiAgICAgIDxsaW5rIHJlbD0icHJlbG9hZCIgYXM9ImZvbnQiIGhyZWY9Imh0dHBzOi8vY2RuLmlzby5vcmcvcmVzb3VyY2VzL2ZvbnRzL2Jvb3RzdHJhcC8zLjMuMi9nbHlwaGljb25zLWhhbGZsaW5ncy1yZWd1bGFyLndvZmYyIiBjcm9zc29yaWdpbiAvPgogICAgICA8bGluayByZWw9InByZWxvYWQiIGFzPSJmb250IiBocmVmPSJodHRwczovL2Nkbi5pc28ub3JnL3Jlc291cmNlcy9mb250cy9tZXRhd2VicHJvLzcuNTA0L01ldGFXZWJQcm8tQm9sZC53b2ZmIiBjcm9zc29yaWdpbiAvPgogICAgICA8bGluayByZWw9InByZWxvYWQiIGFzPSJmb250IiBocmVmPSJodHRwczovL2Nkbi5pc28ub3JnL3Jlc291cmNlcy9mb250cy9tZXRhd2VicHJvLzcuNTA0L01ldGFXZWJQcm8tTm9ybWFsLndvZmYiIGNyb3Nzb3JpZ2luIC8+CiAgICAgIDxsaW5rIHJlbD0icHJlbG9hZCIgYXM9ImZvbnQiIGhyZWY9Imh0dHBzOi8vY2RuLmlzby5vcmcvcmVzb3VyY2VzL2ZvbnRzL21ldGF3ZWJwcm8vNy41MDQvTWV0YVdlYlByby1Ob3JtYWxJdGEud29mZiIgY3Jvc3NvcmlnaW4gLz4KICAgICAgLS0+CgogICAgCjxsaW5rIHJlbD0iY2Fub25pY2FsIiBocmVmPSJodHRwczovL3d3dy5pc28ub3JnL2ZyL3N0YW5kYXJkLzY4MzUwLmh0bWwiIC8+CgogICAgPCEtLSBzdGFydCBmYXZpY29ucyAtLT4KICAgIDxsaW5rIHJlbD0iYXBwbGUtdG91Y2gtaWNvbi1wcmVjb21wb3NlZCIgaHJlZj0iaHR0cHM6Ly9jZG4uaXNvLm9yZy9yZXNvdXJjZXMvd29vZC8zLjMuNy9pbWcvaXNvL2Zhdmljb24vcmVkL2FwcGxlLXRvdWNoLWljb24tMTUyeDE1Mi1wcmVjb21wb3NlZC5wbmciPgogICAgPGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSJodHRwczovL2Nkbi5pc28ub3JnL3Jlc291cmNlcy93b29kLzMuMy43L2ltZy9pc28vZmF2aWNvbi9yZWQvZmF2aWNvbi5pY28iPgogICAgPG1ldGEgbmFtZT0ibXNhcHBsaWNhdGlvbi1UaWxlQ29sb3IiIGNvbnRlbnQ9IiNlZWUiPgogICAgPG1ldGEgbmFtZT0ibXNhcHBsaWNhdGlvbi1UaWxlSW1hZ2UiIGNvbnRlbnQ9Imh0dHBzOi8vY2RuLmlzby5vcmcvcmVzb3VyY2VzL3dvb2QvMy4zLjcvaW1nL2lzby9mYXZpY29uL3JlZC9tc3RpbGUtMTQ0eDE0NC5wbmciPgogICAgPCEtLSBlbmQgZmF2aWNvbnMgLS0+CgogICAgPG1ldGEgbmFtZT0idGhlbWUtY29sb3IiIGNvbnRlbnQ9IiMzMzMiPgoKICAKPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qc29uIiBpZD0iamFoaWEtZGF0YS1jdHgiPnsiY29udGV4dFBhdGgiOiIiLCJsYW5nIjoiZnIiLCJ1aWxhbmciOiJmciIsInNpdGVVdWlkIjoiNDM5MTQ2ZjgtNjc3ZS00ZGRlLWI2YzYtYjY5MmI3NTM0ZjUyIiwid2NhZyI6ZmFsc2UsImNrZUNmZyI6IiJ9PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vanNvbiIgaWQ9ImphaGlhLWRhdGEtY2siPnsicGF0aCI6Ii9tb2R1bGVzL2NrZWRpdG9yL2phdmFzY3JpcHQvIiwibG5nIjoiZnJfRlIifTwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iL2phdmFzY3JpcHQvaW5pdEphaGlhQ29udGV4dC5qcyI+PC9zY3JpcHQ+CjxsaW5rIGlkPSJzdGF0aWNBc3NldENTUzAiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9jZG4uaXNvLm9yZy9yZXNvdXJjZXMvd29vZC8zLjMuNy93b29kLmZ1bGwubWluLmNzcyIgbWVkaWE9InNjcmVlbixwcmludCxoYW5kaGVsZCIgdHlwZT0idGV4dC9jc3MiLz4KPGxpbmsgaWQ9InN0YXRpY0Fzc2V0Q1NTMSIgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvbW9kdWxlcy9hc3NldHMvY3NzL2xhbmd1YWdlU3dpdGNoaW5nTGlua3MuY3NzPzE1ODg2MDQ1MzU3NTgiIG1lZGlhPSJzY3JlZW4iIHR5cGU9InRleHQvY3NzIi8+CjxsaW5rIGlkPSJzdGF0aWNBc3NldENTUzIiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL21vZHVsZXMvaXNvLWphaGlhLXNlcnZpY2UtbW9kdWxlL2Nzcy9jYXRhbG9ndWUuY3NzPzE2NTcwMjgxMjYyNjciIG1lZGlhPSJzY3JlZW4iIHR5cGU9InRleHQvY3NzIi8+CjxzY3JpcHQgaWQ9InN0YXRpY0Fzc2V0SmF2YXNjcmlwdDAiIHNyYz0iaHR0cHM6Ly9jZG4uaXNvLm9yZy9yZXNvdXJjZXMvd29vZC8zLjMuNy93b29kLmZ1bGwubWluLmpzIiAgPjwvc2NyaXB0Pgo8c2NyaXB0IGlkPSJzdGF0aWNBc3NldEphdmFzY3JpcHQxIiBzcmM9Ii9tb2R1bGVzL2lzby1qYWhpYS1zZXJ2aWNlLW1vZHVsZS9qYXZhc2NyaXB0L2NhdGFsb2d1ZS5qcz8xNjU3MDI4MTI2MjY3IiAgPjwvc2NyaXB0Pgo8c2NyaXB0IGlkPSJzdGF0aWNBc3NldEphdmFzY3JpcHQyIiBzcmM9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9qYXZhc2NyaXB0L2N1c3RvbS5qcz8xNjQ4NTQ4MzA0ODM4IiAgPjwvc2NyaXB0Pgo8bWV0YSBuYW1lPSJjYXRlZ29yeSIgY29udGVudD0idyIgLz4KICA8bWV0YSBuYW1lPSJwdWJkYXRlIiBjb250ZW50PSIyMDIxMDYzMCIgLz4KICAKPCEtLSBUd2l0dGVyIENhcmQgZGF0YSAtLT4KICA8bWV0YSBuYW1lPSJ0d2l0dGVyOnNpdGUiIGNvbnRlbnQ9IkBpc29zdGFuZGFyZHMiIC8+CgogIDwhLS0gT3BlbiBHcmFwaCBkYXRhIC0tPgogIDxtZXRhIHByb3BlcnR5PSJvZzpzaXRlX25hbWUiIGNvbnRlbnQ9IklTTyIgLz4KICA8bWV0YSBwcm9wZXJ0eT0ib2c6dXJsIiBjb250ZW50PSJodHRwczovL3d3dy5pc28ub3JnL2Ntcy9yZW5kZXIvbGl2ZS9mci9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNi84My82ODM1MC5odG1sIiAvPgogIDxtZXRhIHByb3BlcnR5PSJvZzp0eXBlIiBjb250ZW50PSJ3ZWJzaXRlIiAvPgogIDwhLS0gVGh1bWJuYWlsIGltYWdlIChmb3IgdHdpdHRlciBhbmQgT3BlbiBHcmFwaCkgLS0+CiAgICA8bWV0YSBuYW1lPSJ0aHVtYm5haWwiIGNvbnRlbnQ9Imh0dHBzOi8vY2RuLmlzby5vcmcvcmVzb3VyY2VzL3dvb2QvMy4zLjMvaW1nL2lzby9pc28tbG9nby1wcmludC5naWYiIC8+CiAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOmNhcmQiIGNvbnRlbnQ9InN1bW1hcnkiIC8+CiAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOmltYWdlIiBjb250ZW50PSJodHRwczovL2Nkbi5pc28ub3JnL3Jlc291cmNlcy93b29kLzMuMy4zL2ltZy9pc28vaXNvLWxvZ28tcHJpbnQuZ2lmIiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSJodHRwczovL2Nkbi5pc28ub3JnL3Jlc291cmNlcy93b29kLzMuMy4zL2ltZy9pc28vaXNvLWxvZ28tcHJpbnQuZ2lmIiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlOmFsdCIgY29udGVudD0iSVNPIGxvZ28iIC8+CiAgPCEtLSBUaXRsZSAoZm9yIHR3aXR0ZXIgYW5kIE9wZW4gR3JhcGgpIC0tPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjp0aXRsZSIgY29udGVudD0iSVNPL0lFQyA4ODI0LTE6MjAxNSIgLz4KICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0aXRsZSIgY29udGVudD0iSVNPL0lFQyA4ODI0LTE6MjAxNSIgLz4KICA8IS0tIERlc2NyaXB0aW9uIChmb3IgZ29vZ2xlLCB0d2l0dGVyIGFuZCBPcGVuIEdyYXBoKSAtLT4KICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9IlRlY2hub2xvZ2llcyBkZSBsJiMwMzk7aW5mb3JtYXRpb24g4oCUIE5vdGF0aW9uIGRlIHN5bnRheGUgYWJzdHJhaXRlIG51bcOpcm8gdW4gKEFTTi4xKTogU3DDqWNpZmljYXRpb24gZGUgbGEgbm90YXRpb24gZGUgYmFzZSDigJQgUGFydGllIDE6IiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIiBjb250ZW50PSJUZWNobm9sb2dpZXMgZGUgbCYjMDM5O2luZm9ybWF0aW9uIOKAlCBOb3RhdGlvbiBkZSBzeW50YXhlIGFic3RyYWl0ZSBudW3DqXJvIHVuIChBU04uMSk6IFNww6ljaWZpY2F0aW9uIGRlIGxhIG5vdGF0aW9uIGRlIGJhc2Ug4oCUIFBhcnRpZSAxOiIgLz4KICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJUZWNobm9sb2dpZXMgZGUgbCYjMDM5O2luZm9ybWF0aW9uIOKAlCBOb3RhdGlvbiBkZSBzeW50YXhlIGFic3RyYWl0ZSBudW3DqXJvIHVuIChBU04uMSk6IFNww6ljaWZpY2F0aW9uIGRlIGxhIG5vdGF0aW9uIGRlIGJhc2Ug4oCUIFBhcnRpZSAxOiIgLz4KICA8IS0tIEZhY2Vib29rIGFkbWlucyA6IExpb25lbCxNYXJpYSAtLT4KICA8bWV0YSBwcm9wZXJ0eT0iZmI6YWRtaW5zIiBjb250ZW50PSIxMDAwMDExMTYwNzk2NzYsMTAwMDAxNDQwMDAzMzA1IiAvPgoKICAKCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9tb2R1bGVzL0NzcmZTZXJ2bGV0Ij48L3NjcmlwdD4KPC9oZWFkPgogIDxib2R5IGNsYXNzPSJ0aGVtZS1yZWQiIGlkPSJvZmZjYW52YXMtY29udGVudCI+CiAgICA8IS0tIEdvb2dsZSBUYWcgTWFuYWdlciAobm9zY3JpcHQpIC0tPgogICAgICA8bm9zY3JpcHQgYXJpYS1oaWRkZW49InRydWUiPjxpZnJhbWUgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ucy5odG1sP2lkPUdUTS1URkdLUVFCIiBoZWlnaHQ9IjAiIHdpZHRoPSIwIiBzdHlsZT0iZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuIj48L2lmcmFtZT48L25vc2NyaXB0PgogICAgICA8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgKG5vc2NyaXB0KSAtLT4KICAgIDxhIGNsYXNzPSJza2lwLW5hdmlnYXRpb24gYnRuIGJ0bi1pbmZvIHNyLW9ubHkgc3Itb25seS1mb2N1c2FibGUiIGhyZWY9IiNjb250ZW50Ij5QYXNzZXIgYXUgY29udGVudSBwcmluY2lwYWw8L2E+CiAgICA8IS0tIEhlYWRlciBJU08uT1JHIC0tPgogICAgPGhlYWRlciByb2xlPSJiYW5uZXIiIGFyaWEtbGFiZWw9IkhlYWRlciIgY2xhc3M9InRoZW1lLXJlZCBoZWFkZXItYWNlciAiIGlkPSJwYWdlLXRvcCI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgPGRpdiBjbGFzcz0ibmF2YmFyIG5hdmJhci1pbnZlcnNlIG5hdmJhci1maXhlZC10b3AgbmF2YmFyLWRlZmF1bHQgbmF2YmFyLWFjZXIgdGhlbWUtcmVkIiBkYXRhLXNweT0iYWZmaXgiIGRhdGEtb2Zmc2V0LXRvcD0iMjAwIj4KICAgICAgICAgIDxidXR0b24gcm9sZT0iYnV0dG9uIiBpZD0ib2ZmY2FudmFzLWJ0biIgY2xhc3M9ImJ0biBidG4tdHJhbnNwYXJlbnQgcHVsbC1yaWdodCIgZGF0YS10b2dnbGU9Im9wZW4tb2ZmY2FudmFzIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1tZW51LWhhbWJ1cmdlciI+PC9zcGFuPjxzcGFuIGNsYXNzPSJoaWRkZW4teHhzIj4gTWVudTwvc3Bhbj48L2J1dHRvbj4KCiAgICAgICAgICA8IS0tIFNJREUgTkFWSUdBVElPTiAtLT4KICAgICAgICAgIDxuYXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iU2lkZSBOYXZpZ2F0aW9uIiBjbGFzcz0ic2lkZW5hdiIgaWQ9Im9mZmNhbnZhcy1wYW5lbCI+PHVsIHJvbGU9Im1lbnViYXIiIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBuYXYtbGV2ZWwxIj48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGZpcnN0SW5MZXZlbCI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIj5Ob3JtZXM8L2E+PHVsIHJvbGU9Im1lbnUiIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBuYXYtbGV2ZWwyIGRyb3Bkb3duLW1lbnUiPjxsaSByb2xlPSJub25lIiBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gZmlyc3RJbkxldmVsIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL2JlbmVmaXRzLW9mLXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iPkF2YW50YWdlczwvYT48dWwgcm9sZT0ibWVudSIgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDMgZHJvcGRvd24tbWVudSI+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIGZpcnN0SW5MZXZlbCI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9pc28tYW5kLXNtZXMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIj5QTUU8L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvaXNvLWFuZC1jb25zdW1lcnMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIj5Db25zb21tYXRldXJzPC9hPjwvbGk+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL2lzby1hbmQtcG9saWN5LW1ha2Vycy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iPkzigJlJU08gZXQgbGVzIG9yZ2FuaXNtZXMgZGUgcsOpZ2xlbWVudGF0aW9uPC9hPjwvbGk+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL3N0YW5kYXJkcy1pbi1hY3Rpb24uaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIj5Ob3JtZXMgZW4gYWN0aW9uPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL3BvcHVsYXItc3RhbmRhcmRzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiI+TGVzIG5vcm1lcyBsZXMgcGx1cyBjb25udWVzPC9hPjwvbGk+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9jb25mb3JtaXR5LWFzc2Vzc21lbnQuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIj5DZXJ0aWZpY2F0aW9uICYgY29uZm9ybWl0w6k8L2E+PHVsIHJvbGU9Im1lbnUiIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBuYXYtbGV2ZWwzIGRyb3Bkb3duLW1lbnUiPjxsaSByb2xlPSJub25lIiBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvY2VydGlmaWNhdGlvbi5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iPkNlcnRpZmljYXRpb248L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvY2FzY28uaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIj5DQVNDTzwvYT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci90aGUtaXNvLXN1cnZleS5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iPkwnw4l0dWRlIElTTzwvYT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9yZXNvdXJjZXMtZm9yLWNvbmZvcm1pdHktYXNzZXNzbWVudC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iPlJlc3NvdXJjZXM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvc2Rncy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iPk9ERDwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvYWJvdXQtdXMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIj7DgCBwcm9wb3MgZGUgbCdJU088L2E+PHVsIHJvbGU9Im1lbnUiIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBuYXYtbGV2ZWwyIGRyb3Bkb3duLW1lbnUiPjxsaSByb2xlPSJub25lIiBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gZmlyc3RJbkxldmVsIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL3doYXQtd2UtZG8uaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIj5Ob3MgYWN0aXZpdMOpczwvYT48dWwgcm9sZT0ibWVudSIgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDMgZHJvcGRvd24tbWVudSI+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIGZpcnN0SW5MZXZlbCI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9kZXZlbG9waW5nLXN0YW5kYXJkcy5odG1sIiAgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIj5FbGFib3JhdGlvbiBkZXMgbm9ybWVzPC9hPjwvbGk+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9yZXNlYXJjaC1hbmQtZWR1Y2F0aW9uLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiI+UmVjaGVyY2hlPC9hPjx1bCByb2xlPSJtZW51IiBjbGFzcz0ibmF2IG5hdmJhci1uYXYgbmF2LWxldmVsNCBkcm9wZG93bi1tZW51Ij48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iI2dyYW50IiAgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIj5HcmFudDwvYT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9IiNmb3Jlc2lnaHQiICBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iPkZvcmVzaWdodDwvYT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9IiNsaWJyYXJ5IiAgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIj5MaWJyYXJ5PC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL2NhcGFjaXR5LWJ1aWxkaW5nLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiI+UmVuZm9yY2VtZW50IGRlcyBjYXBhY2l0w6lzPC9hPjwvbGk+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL2VkdWNhdGlvbi1hYm91dC1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIj5FbnNlaWduZW1lbnQgc3VyIGxlcyBub3JtZXM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvc3RydWN0dXJlLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiI+U3RydWN0dXJlPC9hPjwvbGk+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL21lbWJlcnMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIj5NZW1icmVzPC9hPjwvbGk+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL2Fubm91bmNlbWVudHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIj5Db21tdW5pcXXDqXM8L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGxhc3RJbkxldmVsIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL3N0cmF0ZWd5MjAzMC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iPlN0cmF0w6lnaWUgMjAzMDwvYT48dWwgcm9sZT0ibWVudSIgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDMgZHJvcGRvd24tbWVudSI+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL3N0cmF0ZWd5MjAzMC9kcml2ZXJzLW9mLWNoYW5nZS5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iPkZhY3RldXJzIGRlIGNoYW5nZW1lbnQ8L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvc3RyYXRlZ3kyMDMwL291ci1nb2Fscy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iPk5vcyBvYmplY3RpZnM8L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvc3RyYXRlZ3kyMDMwL3ByaW9yaXRpZXMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIj5Qcmlvcml0w6lzPC9hPjwvbGk+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL3N0cmF0ZWd5MjAzMC9rZXktYXJlYXMtb2Ytd29yay5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iPktleSBhcmVhcyBvZiB3b3JrPC9hPjwvbGk+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL3N0cmF0ZWd5MjAzMC9tZWFzdXJpbmctc3VjY2Vzcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iPk1lc3VyZXIgbGUgc3VjY8OoczwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvbmV3cy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iPkFjdHVhbGl0w6lzPC9hPjx1bCByb2xlPSJtZW51IiBjbGFzcz0ibmF2IG5hdmJhci1uYXYgbmF2LWxldmVsMiBkcm9wZG93bi1tZW51Ij48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvZXZlbnRzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiI+TWFuaWZlc3RhdGlvbnM8L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvbWVkaWEta2l0Lmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiI+RG9zc2llciBtw6lkaWFzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9kZXZlbG9waW5nLXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iPlBhcnRpY2lwZXI8L2E+PHVsIHJvbGU9Im1lbnUiIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBuYXYtbGV2ZWwyIGRyb3Bkb3duLW1lbnUiPjxsaSByb2xlPSJub25lIiBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gZmlyc3RJbkxldmVsIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL3doby1kZXZlbG9wcy1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIj5RdWkgw6lsYWJvcmUgbGVzIG5vcm1lczwvYT48dWwgcm9sZT0ibWVudSIgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDMgZHJvcGRvd24tbWVudSI+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIGZpcnN0SW5MZXZlbCI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci90ZWNobmljYWwtY29tbWl0dGVlcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iPkNvbWl0w6lzIHRlY2huaXF1ZXM8L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvb3RoZXItYm9kaWVzLWRldmVsb3Bpbmctc3RhbmRhcmRzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiI+QXV0cmVzIG9yZ2FuaXNtZXM8L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvb3JnYW5pemF0aW9ucy1pbi1jb29wZXJhdGlvbi13aXRoLWlzby5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iPk9yZ2FuaXNhdGlvbnMgZW4gY29vcMOpcmF0aW9uPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL2RlbGl2ZXJhYmxlcy1hbGwuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIj5MaXZyYWJsZXM8L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvZ2V0LWludm9sdmVkLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiI+UG91cnF1b2kgc+KAmWVuZ2FnZXIgPzwvYT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9DbGltYXRlQWN0aW9uLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiI+S2l0IGTigJlhY3Rpb24gcG91ciBsZSBjbGltYXQ8L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvcmVzb3VyY2VzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiI+UmVzc291cmNlczwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gaW5QYXRoIGxhc3RJbkxldmVsIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL3N0b3JlLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiI+U3RvcmU8L2E+PHVsIHJvbGU9Im1lbnUiIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBuYXYtbGV2ZWwyIGRyb3Bkb3duLW1lbnUiPjxsaSByb2xlPSJub25lIiBjbGFzcz0ibm9DaGlsZHJlbiBpblBhdGggYWN0aXZlIGZpcnN0SW5MZXZlbCI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9zdGFuZGFyZHMtY2F0YWxvZ3VlL2Jyb3dzZS1ieS1pY3MuaHRtbCIgIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiI+Q2F0YWxvZ3VlIGRlIG5vcm1lczwvYT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9wdWJsaWNhdGlvbi1saXN0Lmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiI+UHVibGljYXRpb25zIGV0IHByb2R1aXRzPC9hPjwvbGk+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iaHR0cHM6Ly93d3cuaXNvLm9yZy9vYnAvdWkvZnIvI2FjY291bnQvcHJvZHVjdHMiICB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIj5Nb24gY29tcHRlPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbmF2PjxkaXYgY2xhc3M9ImNvbnRhaW5lciBvZmZjYW52YXMtcmlnaWQiPgogICAgICAgICAgICA8YSBjbGFzcz0ibG9nbyBpc29sb2dvIiBocmVmPSIvZnIvaG9tZS5odG1sIiB0aXRsZT0iT3JnYW5pc2F0aW9uIGludGVybmF0aW9uYWxlIGRlIG5vcm1hbGlzYXRpb24iIGFsdD0iTG9nbyBJU08iPjwvYT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXNvbG9nby1wcmludCI+PGltZyBzcmM9Imh0dHBzOi8vY2RuLmlzby5vcmcvcmVzb3VyY2VzL3dvb2QvMy4zLjcvaW1nL2lzby9pc28tbG9nby1wcmludC5naWYiIGFsdD0iTG9nbyBJU08gcG91ciBpbXByZXNzaW9uIi8+PC9kaXY+CgogICAgICAgICAgICA8dWwgaWQ9InV0aWxpdHlOYXYiIGFyaWEtbGFiZWw9IlV0aWxpdGllcyBOYXZpZ2F0aW9uIiBjbGFzcz0ibmF2IG5hdmJhci1uYXYgbmF2YmFyLXJpZ2h0Ij4KICAgICAgICAgICAgICA8bGkgY2xhc3M9Im5hdi1nbHlwaGljb24gbmF2LXNlYXJjaCIgaWQ9Im5hdi1zZWFyY2giPgogICAgICAgICAgICAgICAgPGZvcm0gY2xhc3M9ImV4cGFuZGFibGUgaXNvc2VhcmNoIiByb2xlPSJzZWFyY2giPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXVybGJhc2U9Ii9jbXMvcmVuZGVyL2xpdmUvZnIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1zZWFyY2hwYWdlcGF0aD0iL3NpdGVzL2lzb29yZy9zZWFyY2giPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPGxhYmVsIGlkPSJpbnB1dC1zZWFyY2giIGNsYXNzPSJjb250cm9sLWxhYmVsIGhpZGRlbi14cyIgZm9yPSJpbnB1dC1zZWFyY2giPlJlY2hlcmNoZTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJzZWFyY2giIHBsYWNlaG9sZGVyPSIiIGFyaWEtbGFiZWxsZWRieT0iaW5wdXQtc2VhcmNoIj4KICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1zZWFyY2giIHR5cGU9InN1Ym1pdCIgYXJpYS1sYWJlbGxlZGJ5PSJpbnB1dC1zZWFyY2giPjwvYnV0dG9uPgogICAgICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtZ2x5cGhpY29uIj4KICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJzaG9wcGluZy1jYXJ0LWxpbmsiIGhyZWY9Ii93ZWJzdG9yZS9zaG9wcGluZ2Jhc2tldD9tZW1iZXJJZD1JU08mZ3VpbGFuZz1mciIgdGl0bGU9IlBhbmllciBkJ2FjaGF0IiBhcmlhLWxhYmVsPSJQYW5pZXIgZCdhY2hhdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLXNob3BwaW5nLWNhcnQiIGlkPSJzaG9wcGluZ0l0ZW1zIj48L3NwYW4+CiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAKPGxpIGNsYXNzPSJkcm9wZG93biIgaWQ9Imxhbmctc3dpdGNoZXIiPgogIDxhIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgaHJlZj0iIyI+RlI8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj48L2E+CiAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgIDxsaT48YSBocmVmPSIvc3RhbmRhcmQvNjgzNTAuaHRtbCI+RW5nbGlzaDwvYT48L2xpPjxsaT48YSBocmVmPSIvcnUvc3RhbmRhcmQvNjgzNTAuaHRtbCI+0YDRg9GB0YHQutC40Lk8L2E+PC9saT48L3VsPgo8L2xpPjwvdWw+CiAgICAgICAgICAgIDwhLS0gVE9QIExFVkVMMSBOQVZJR0FUSU9OIC0tPgogICAgICAgICAgICA8bmF2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9Ik1haW4gTmF2aWdhdGlvbiIgY2xhc3M9InNpZGVuYXYiIGlkPSJtYWluTmF2Ij48dWwgcm9sZT0ibWVudWJhciIgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdmJhci1yaWdodCBhZmZpeC10b3BuYXYtbGV2ZWwxIj48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL3N0YW5kYXJkcy5odG1sIj5Ob3JtZXM8L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvYWJvdXQtdXMuaHRtbCI+w4AgcHJvcG9zIGRlIGwnSVNPPC9hPjwvbGk+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL25ld3MuaHRtbCI+QWN0dWFsaXTDqXM8L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvZGV2ZWxvcGluZy1zdGFuZGFyZHMuaHRtbCI+UGFydGljaXBlcjwvYT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0ibm9DaGlsZHJlbiBpblBhdGggbGFzdEluTGV2ZWwiPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvc3RvcmUuaHRtbCI+U3RvcmU8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9uYXY+PC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBpZD0ic2VhcmNoLWN1cnRhaW4iPjwvZGl2PgogICAgICA8L2Rpdj4KCiAgICAgIDwvaGVhZGVyPgogICAgPCEtLSBNQUlOIENPTlRFTlQgLS0+CiAgICA8bWFpbiByb2xlPSJtYWluIiBpZD0iY29udGVudCIgY2xhc3M9ImFjZXIiIGFyaWEtbGFiZWw9IkNvbnRlbnQiIHRhYmluZGV4PSItMSI+CiAgICAgIAoKCgo8c3BhbiBjbGFzcz0iaGlkZGVuIiBpZD0iaW5kZXhSZWZlcmVuY2UiIGRhdGEtaW5kZXg9IjY4MzUwIC0gSVNPL0lFQyA4ODI0LTE6MjAxNSAtIFRlY2hub2xvZ2llcyBkZSBsJ2luZm9ybWF0aW9uIOKAlCBOb3RhdGlvbiBkZSBzeW50YXhlIGFic3RyYWl0ZSBudW3DqXJvIHVuIChBU04uMSk6IFNww6ljaWZpY2F0aW9uIGRlIGxhIG5vdGF0aW9uIGRlIGJhc2Ug4oCUIFBhcnRpZSAxOiI+PC9zcGFuPgo8c3BhbiBjbGFzcz0iaGlkZGVuIiBpZD0iaXRlbVJlZmVyZW5jZSI+SVNPL0lFQyA4ODI0LTE6MjAxNTwvc3Bhbj4KPHNlY3Rpb24gaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwczovL3NjaGVtYS5vcmcvUHJvZHVjdCIgY2xhc3M9InNlY3Rpb24tbmF2aWdhdGlvbiI+CiAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiI+CiAgICAgICAgPGRpdiBjbGFzcz0iaGlkZGVuIiBpdGVtcHJvcD0iY2F0ZWdvcnkiPnc8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJoaWRkZW4iIGl0ZW1wcm9wPSJwcm9kdWN0SUQiIGlkPSJjc051bWJlciI+NjgzNTA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJoaWRkZW4iIGl0ZW1wcm9wPSJicmFuZCIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwczovL3NjaGVtYS5vcmcvT3JnYW5pemF0aW9uIj4KICAgICAgICAgIDxkaXYgaXRlbXByb3A9ImxvZ28iIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cHM6Ly9zY2hlbWEub3JnL0ltYWdlT2JqZWN0Ij4KICAgICAgICAgICAgPG1ldGEgaXRlbXByb3A9InVybCIgY29udGVudD0iaHR0cHM6Ly9jZG4uaXNvLm9yZy9yZXNvdXJjZXMvd29vZC8zLjMuMy9pbWcvaXNvL2lzby1sb2dvLXByaW50LmdpZiIvPgogICAgICAgICAgICA8bWV0YSBpdGVtcHJvcD0id2lkdGgiIGNvbnRlbnQ9IjI4MyI+CiAgICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJoZWlnaHQiIGNvbnRlbnQ9IjI2MSI+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJuYW1lIiBjb250ZW50PSJPcmdhbmlzYXRpb24gaW50ZXJuYXRpb25hbGUgZGUgbm9ybWFsaXNhdGlvbiI+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxuYXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iQ2hpbGRyZW4gTmF2aWdhdGlvbiIgY2xhc3M9ImhlYWRpbmctY29uZGVuc2VkIG5hdi1yZWxhdGl2ZXMiPgoKICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWhlYWQgd3JhcHBlZC1kYW5nZXIgd3JhcHBlZC1oMSI+PHNwYW4gY2xhc3M9Imljb24gIj48L3NwYW4+PGEgdGFyZ2V0PSIiIGhyZWY9Ii9mci9zdGFuZGFyZHMtY2F0YWxvZ3VlL2Jyb3dzZS1ieS1pY3MuaHRtbCJ0aXRsZT0iRXhwbG9yZXogbGEgY29sbGVjdGlvbiBkZSBub3JtZXMgSVNPIGRhbnMgc29uIGludMOpZ3JhbGl0w6kgZXQgdHJvdXZleiBjZWxsZXMgcXVpIHPigJlhcHBsaXF1ZW50IMOgIHZvdHJlIHNlY3RldXIuIj5JQ1M8L2E+ID4mbmJzcDs8YSBocmVmPSIvZnIvaWNzLzM1Lmh0bWwiPjM1PC9hPiA+Jm5ic3A7PGEgaHJlZj0iL2ZyL2ljcy8zNS4xMDAuaHRtbCI+MzUuMTAwPC9hPiA+Jm5ic3A7PGEgaHJlZj0iL2ZyL2ljcy8zNS4xMDAuNjAuaHRtbCI+MzUuMTAwLjYwPC9hPjwvZGl2PgogIDxoMT5JU08vSUVDIDg4MjQtMToyMDE1PC9oMT4KICA8aDIgY2xhc3M9Im5vLXVwcGVyY2FzZSI+VGVjaG5vbG9naWVzIGRlIGwnaW5mb3JtYXRpb24g4oCUIE5vdGF0aW9uIGRlIHN5bnRheGUgYWJzdHJhaXRlIG51bcOpcm8gdW4gKEFTTi4xKTogU3DDqWNpZmljYXRpb24gZGUgbGEgbm90YXRpb24gZGUgYmFzZSDigJQgUGFydGllIDE6PC9oMj48L25hdj48L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2Pgo8L3NlY3Rpb24+Cgo8c2VjdGlvbiBpZD0icmV2aXNlZC1ieSIgY2xhc3M9ImJnLWhlbHAgc2VjdGlvbi1zbSI+CiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiI+CiAgICAgICAgICA8aDMgcm9sZT0iYWxlcnQiIGNsYXNzPSJuby1tYXJnaW4iPgogICAgICAgICAgICBDZXR0ZSBub3JtZSBhIMOpdMOpIHLDqXZpc8OpZSBwYXI8YSBocmVmPSIvZnIvc3RhbmRhcmQvODE0MTYuaHRtbCI+SVNPL0lFQyA4ODI0LTE6MjAyMTwvYT48L2gzPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvc2VjdGlvbj4KPHNlY3Rpb24gaWQ9InByb2R1Y3QtZGV0YWlscyI+CiAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC03Ij4KICAgICAgICA8aDM+UsOpc3Vtw6kmbmJzcDs8L2gzPgogICAgICAgICAgPGRpdiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgogICAgICAgICAgICA8cD48cD5JU08vSUVDIDg4MjQtMToyMDE1IHByb3ZpZGVzIGEgc3RhbmRhcmQgbm90YXRpb24gY2FsbGVkIEFic3RyYWN0IFN5bnRheCBOb3RhdGlvbiBPbmUgKEFTTi4xKSB0aGF0IGlzIHVzZWQgZm9yIHRoZSBkZWZpbml0aW9uIG9mIGRhdGEgdHlwZXMsIHZhbHVlcywgYW5kIGNvbnN0cmFpbnRzIG9uIGRhdGEgdHlwZXMuPC9wPgo8cD5JU08vSUVDIDg4MjQtMToyMDE1OjwvcD4KPHA+LSAgICAgIGRlZmluZXMgYSBudW1iZXIgb2Ygc2ltcGxlIHR5cGVzLCB3aXRoIHRoZWlyIHRhZ3MsIGFuZCBzcGVjaWZpZXMgYSBub3RhdGlvbiBmb3IgcmVmZXJlbmNpbmcgdGhlc2UgdHlwZXMgYW5kIGZvciBzcGVjaWZ5aW5nIHZhbHVlcyBvZiB0aGVzZSB0eXBlczs8L3A+CjxwPi0gICAgICBkZWZpbmVzIG1lY2hhbmlzbXMgZm9yIGNvbnN0cnVjdGluZyBuZXcgdHlwZXMgZnJvbSBtb3JlIGJhc2ljIHR5cGVzLCBhbmQgc3BlY2lmaWVzIGEgbm90YXRpb24gZm9yIGRlZmluaW5nIHN1Y2ggdHlwZXMgYW5kIGFzc2lnbmluZyB0aGVtIHRhZ3MsIGFuZCBmb3Igc3BlY2lmeWluZyB2YWx1ZXMgb2YgdGhlc2UgdHlwZXM7PC9wPgo8cD4tICAgICAgZGVmaW5lcyBjaGFyYWN0ZXIgc2V0cyAoYnkgcmVmZXJlbmNlIHRvIG90aGVyIFJlY29tbWVuZGF0aW9ucyBhbmQvb3IgSW50ZXJuYXRpb25hbCBTdGFuZGFyZHMpIGZvciB1c2Ugd2l0aGluIEFTTi4xLjwvcD4KPHA+VGhlIEFTTi4xIG5vdGF0aW9uIGNhbiBiZSBhcHBsaWVkIHdoZW5ldmVyIGl0IGlzIG5lY2Vzc2FyeSB0byBkZWZpbmUgdGhlIGFic3RyYWN0IHN5bnRheCBvZiBpbmZvcm1hdGlvbi48L3A+CjxwPlRoZSBBU04uMSBub3RhdGlvbiBpcyByZWZlcmVuY2VkIGJ5IG90aGVyIHN0YW5kYXJkcyB3aGljaCBkZWZpbmUgZW5jb2RpbmcgcnVsZXMgZm9yIHRoZSBBU04uMSB0eXBlcy48L3A+PC9wPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8YnIvPgogICAgICAgIDxoMz4KICBJbmZvcm1hdGlvbnMgZ8OpbsOpcmFsZXM8c3VwPjxhIGhyZWY9Ii9mci9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA2LzgzLzY4MzUwLmRldGFpbC5yc3MiIGNsYXNzPSJzcy1pY29uIHNzLXNvY2lhbC1jaXJjbGUgdGV4dC13YXJuaW5nIHRleHQtc20iIGRhdGEtdG9nZ2xlPSJpc28tdG9vbHRpcCIgZGF0YS1vcmlnaW5hbC10aXRsZT0iUydhYm9ubmVyJm5ic3A7YXV4Jm5ic3A7bWlzZXMmbmJzcDvDoCZuYnNwO2pvdXIiPiYjeEUzMTA7PC9hPjwvc3VwPgogIDwvaDM+Cjx1bCBjbGFzcz0icmVmaW5lIj4KICA8bGk+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNiI+CiAgICAgICAgPHN0cm9uZz7DiXRhdCBhY3R1ZWwmbmJzcDs6Jm5ic3A7Jm5ic3A7PC9zdHJvbmc+PHNwYW4+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tYmFuLWNpcmNsZSIgdGl0bGU9IkFubnVsw6llIj48L3NwYW4+QW5udWzDqWU8L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS02Ij4KICAgICAgICA8c3Ryb25nPkRhdGUgZGUgcHVibGljYXRpb24mbmJzcDs6IDwvc3Ryb25nPjxzcGFuIGl0ZW1wcm9wPSJyZWxlYXNlRGF0ZSI+MjAxNS0xMTwvc3Bhbj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvbGk+CiAgPGxpPgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTYiPgogICAgICAgIDxzdHJvbmc+RWRpdGlvbiZuYnNwOzo8L3N0cm9uZz4gNTwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNiI+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2xpPgogIDxsaT4KICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPgogICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LWxhYmVsIj5Db21pdMOpIHRlY2huaXF1ZTwvZGl2PiA6CiAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktbmFtZSBlbnRyeS1ibG9jayI+CiAgICAgICAgICA8YSBocmVmPSIvZnIvY29tbWl0dGVlLzQ1MDcyLmh0bWwiPklTTy9JRUMgSlRDIDEvU0MgNjwvYT48L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS10aXRsZSI+VMOpbMOpaW5mb3JtYXRpcXVlPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9saT4KICA8bGk+CiAgICA8ZGwgY2xhc3M9ImRsLWlubGluZSBuby1ib3R0b20tbWFyZ2luIj4KICAgICAgPGR0IGNsYXNzPSJlbnRyeS1sYWJlbCBlbnRyeS1ibG9jayI+PHN0cm9uZz5JQ1MgOiA8L3N0cm9uZz48L2R0PgogICAgICA8ZGQ+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS1uYW1lIGVudHJ5LWJsb2NrIj4KICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL2ljcy8zNS4xMDAuNjAuaHRtbCI+CiAgICAgICAgICAgICAgICAzNS4xMDAuNjA8L2E+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LXRpdGxlIj5Db3VjaGUgcHLDqXNlbnRhdGlvbjwvZGl2PgogICAgICAgIDwvZGQ+CiAgICAgIDwvZGw+CiAgPC9saT4KPC91bD4KPGRpdiBjbGFzcz0ic2RnLWJveCI+CiAgICAgIDxwPgogICAgICAgIDxpbWcgbG9hZGluZz0ibGF6eSIgc3JjPSIvZmlsZXMvbGl2ZS9zaXRlcy9pc29vcmcvZmlsZXMvZGF0YS9zZGcvZnIvc2RnLWxvZ28ucG5nIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUgd2lkdGgtMTAwcGN0IHdpZHRoLTMwMCIgYWx0PSJPYmplY3RpZnMgZGUgZMOpdmVsb3BwZW1lbnQgZHVyYWJsZSIgLz4KICAgICAgPC9wPgogICAgICA8cD4KICAgICAgICBDZXR0ZSBub3JtZSBjb250cmlidWUgw6AgbCc8YSBocmVmPSIvZnIvc2Rncy5odG1sIj5PYmplY3RpZiBkZSBkw6l2ZWxvcHBlbWVudCBkdXJhYmxlPC9hPiZuYnNwO3N1aXZhbnQmbmJzcDs6PHA+CiAgICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4Ij4KICAgICAgICA8YSBocmVmPSIvZnIvc2RnL1NERzA5Lmh0bWwiIHRpdGxlPSJJbmR1c3RyaWUsIGlubm92YXRpb24gZXQgaW5mcmFzdHJ1Y3R1cmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZGcgc2RnLXNtIHNkZy0wOSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2RnLWljb24iPjwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNkZy1sYWJlbCI+OTwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNkZy10ZXh0Ij5JbmR1c3RyaWUsIGlubm92YXRpb24gZXQgaW5mcmFzdHJ1Y3R1cmU8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZGctbG9nbyI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9kaXY+CgogICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCBjb2wtbWQtb2Zmc2V0LTEiPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9kaXY+Cjwvc2VjdGlvbj4KCjxzZWN0aW9uIGlkPSJsaWZlY3ljbGUiPgogIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIiPgogICAgICAgIDxoMz5DeWNsZSBkZSB2aWU8L2gzPgogICAgICAgIDxici8+CiAgICAgICAgPGRpdiBjbGFzcz0ibGlmZWN5Y2xlIj4KICAgICAgICAgIDx1bCBjbGFzcz0ic3RlcHMiPgogICAgICAgICAgICA8bGkgY2xhc3M9InRpbWUtc3RlcCI+CiAgICAgICAgICAgICAgICA8aDQgY2xhc3M9InRleHQtaGVscCI+UHLDqWPDqWRlbW1lbnQ8L2g0PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RlcCBzdGVwLW11dGVkIj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RlcC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWhlYWQiPkFubnVsw6llPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGg1PjxhIGhyZWY9Ii9mci9zdGFuZGFyZC81NDAxMi5odG1sIj5JU08vSUVDIDg4MjQtMToyMDA4PC9hPjwvaDU+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RlcC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWhlYWQiPkFubnVsw6llPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGg1PjxhIGhyZWY9Ii9mci9zdGFuZGFyZC82MDAwMS5odG1sIj5JU08vSUVDIDg4MjQtMToyMDA4L0NvciAxOjIwMTI8L2E+PC9oNT4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGVwLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24taGVhZCI+QW5udWzDqWU8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8aDU+PGEgaHJlZj0iL2ZyL3N0YW5kYXJkLzYxOTg2Lmh0bWwiPklTTy9JRUMgODgyNC0xOjIwMDgvQ29yIDI6MjAxNDwvYT48L2g1PgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIDxsaSBjbGFzcz0idGltZS1zdGVwIj4KICAgICAgICAgICAgICA8aDQgY2xhc3M9InRleHQtaGVscCI+QWN0dWVsbGVtZW50PC9oND4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGVwIHN0ZXAtaGVscCBhY3RpdmUiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24taGVhZCI+QW5udWzDqWU8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8aDU+SVNPL0lFQyA4ODI0LTE6MjAxNTwvaDU+CiAgICAgICAgICAgICAgICAgIDxhIGRhdGEtdG9nZ2xlPSJjb2xsYXBzZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgZGF0YS10YXJnZXQ9IiNzdGFnZXMiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUgY3VycmVudC1zdGFnZSB0ZXh0LXNtIj5TdGFkZTogPHN0cm9uZz45NS45OTwvc3Ryb25nPjxzcGFuIGNsYXNzPSJjYXJldCI+PC9zcGFuPjwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBzdGFnZXMgY29sbGFwc2UiIGlkPSJzdGFnZXMiPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biBzdGF0ZS1pbmZvIj4KICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+MDA8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5QcsOpbGltaW5haXJlPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duIHN0YXRlLWluZm8iPgogICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz4xMDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPlByb3Bvc2l0aW9uPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duIHN0YXRlLWluZm8iPgogICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz4yMDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPlByw6lwYXJhdGlvbjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biBzdGF0ZS1pbmZvIj4KICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+MzA8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5Db21pdMOpPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJldCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCMzMF85OSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj4zMC45OTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMTUtMDEtMDU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDRCBhcHByb3V2w6kgcG91ciBlbnJlZ2lzdHJlbWVudCBjb21tZSBESVM8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPjwvdWw+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duIHN0YXRlLWluZm8iPgogICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz40MDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPkVucXXDqnRlPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJldCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCM0MF8wMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj40MC4wMDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMTUtMDEtMjI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBESVMgZW5yZWdpc3Ryw6k8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPjxsaSA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCM0MF8yMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj40MC4yMDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMTUtMDMtMjQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNaXNlIGF1IHZvdGUgZHUgRElTOiAgMTIgc2VtYWluZXM8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPjxsaSA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCM0MF82MCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj40MC42MDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMTUtMDYtMjU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDbMO0dHVyZSBkdSB2b3RlPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT48bGkgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjNDBfOTkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+NDAuOTk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4yMDE1LTA4LTI0PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmFwcG9ydCBjb21wbGV0IGRpZmZ1c8OpOiBESVMgYXBwcm91dsOpIHBvdXIgZW5yZWdpc3RyZW1lbnQgY29tbWUgRkRJUzwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+PC91bD4KICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gc3RhdGUtaW5mbyI+CiAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjUwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+QXBwcm9iYXRpb248L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gc3RhdGUtc3VjY2VzcyI+CiAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjYwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+UHVibGljYXRpb248L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmV0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdGFnZS1jb2Rlcy5odG1sIzYwXzAwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjYwLjAwPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MjAxNS0xMC0yODwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5vcm1lIGludGVybmF0aW9uYWxlIGVuIGNvdXJzIGRlIHB1YmxpY2F0aW9uPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT48bGkgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjNjBfNjAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+NjAuNjA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4yMDE1LTExLTEyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTm9ybWUgaW50ZXJuYXRpb25hbGUgcHVibGnDqWU8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPjwvdWw+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duIHN0YXRlLXN1Y2Nlc3MiPgogICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz45MDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPkV4YW1lbjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjOTBfOTIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+OTAuOTI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4yMDIwLTA3LTAyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTm9ybWUgaW50ZXJuYXRpb25hbGUgw6AgcsOpdmlzZXI8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPjwvdWw+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duIGJnLWhlbHAgYWN0aXZlIj4KICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+OTU8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5Bbm51bGF0aW9uPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJldCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iYWN0aXZlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdGFnZS1jb2Rlcy5odG1sIzk1Xzk5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjk1Ljk5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MjAyMS0wNi0zMDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFubnVsYXRpb24gZGUgbGEgTm9ybWUgaW50ZXJuYXRpb25hbGU8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPjwvdWw+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8L3VsPgoKICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3ViLXN0ZXAiPgogICAgICAgICAgICAgICAgPGg1PlJlY3RpZmljYXRpZnMgdGVjaG5pcXVlcyAvIEFtZW5kZW1lbnRzPC9oNT4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RlcCBzdGVwLW11dGVkIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0ZXAtaXRlbSI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24taGVhZCI+QW5udWzDqWU8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGg1PjxhIGhyZWY9Ii9mci9zdGFuZGFyZC83NjUwMi5odG1sIj5JU08vSUVDIDg4MjQtMToyMDE1L0FtZCAxOjIwMTk8L2E+PC9oNT4KICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InN0ZXAtaXRlbSI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24taGVhZCI+QW5udWzDqWU8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGg1PjxhIGhyZWY9Ii9mci9zdGFuZGFyZC83MzI5My5odG1sIj5JU08vSUVDIDg4MjQtMToyMDE1L0NvciAxOjIwMTc8L2E+PC9oNT4KICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InN0ZXAtaXRlbSI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24taGVhZCI+QW5udWzDqWU8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGg1PjxhIGhyZWY9Ii9mci9zdGFuZGFyZC83NjUwMy5odG1sIj5JU08vSUVDIDg4MjQtMToyMDE1L0NvciAyOjIwMTg8L2E+PC9oNT4KICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InN0ZXAtaXRlbSI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24taGVhZCI+QW5udWzDqWU8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGg1PjxhIGhyZWY9Ii9mci9zdGFuZGFyZC83Njc1OS5odG1sIj5JU08vSUVDIDg4MjQtMToyMDE1L0NvciAzOjIwMTg8L2E+PC9oNT4KICAgICAgICAgICAgICAgIDwvZGl2PjwvZGl2PjwvZGl2PjwvbGk+CiAgICAgICAgICAgIDxsaSBjbGFzcz0idGltZS1zdGVwIj4KCiAgICAgICAgICAgICAgPGg0IGNsYXNzPSJ0ZXh0LWhlbHAiPlLDqXZpc8OpZSBwYXI8L2g0PgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGVwIHN0ZXAtc3VjY2VzcyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGVwLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24taGVhZCI+UHVibGnDqWU8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8aDU+PGEgaHJlZj0iL2ZyL3N0YW5kYXJkLzgxNDE2Lmh0bWwiPklTTy9JRUMgODgyNC0xOjIwMjE8L2E+PC9oNT4KICAgICAgICAgICAgICAgICAgPC9kaXY+PC9kaXY+PC9saT4KICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Rpdj4KPC9zZWN0aW9uPgo8c2VjdGlvbiBjbGFzcz0iYmctaW5mbyIgaWQ9ImNvbnRhY3QiPgogIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICAgICAgPGg0PlZvdXMgYXZleiB1bmUgcXVlc3Rpb24/PC9oND4KCjxwPkNvbnN1bHRlciBub3RyZSZuYnNwOzxhIGhyZWY9Ii9mci9mcmVxdWVudGx5LWFza2VkLXF1ZXN0aW9ucy1mYXFzLmh0bWwiIHRpdGxlPSJGb2lyZSBBdXggUXVlc3Rpb25zIChGQVFzKSI+RkFRPC9hPjwvcD48L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTQiPgogICAgICAgIDxkaXYgY2xhc3M9InZjYXJkIGNvbnRhY3Qgbm8tZmlndXJlIGNsZWFyZml4IiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxkaXYgY2xhc3M9ImNvbnRlbnQtYm94IG5vLWltYWdlIj4KPGRpdiBjbGFzcz0iZm4gbiI+PHNwYW4gY2xhc3M9ImdpdmVuLW5hbWUiIGl0ZW1wcm9wPSJnaXZlbk5hbWUiPlNlcnZpY2UgJmFncmF2ZTsgbGEgY2xpZW50JmVncmF2ZTtsZTwvc3Bhbj48L2Rpdj4KCjxkaXYgY2xhc3M9InRlbCIgaXRlbXByb3A9InRlbGVwaG9uZSI+KzQxIDIyIDc0OSAwOCA4ODwvZGl2PgoKPGRpdiBjbGFzcz0iZW1haWwiIGl0ZW1wcm9wPSJlbWFpbCI+PGEgaHJlZj0ibWFpbHRvOmN1c3RvbWVyc2VydmljZUBpc28ub3JnIj5jdXN0b21lcnNlcnZpY2VAaXNvLm9yZzwvYT48L2Rpdj4KCjxociAvPgo8ZGl2IGNsYXNzPSJub3RlIj4KPHAgY2xhc3M9InNtYWxsIj5Ib3JhaXJlcyBkJnJzcXVvO291dmVydHVyZTo8YnIgLz4KRGUgbHVuZGkgJmFncmF2ZTsgdmVuZHJlZGkgLSAwOTowMC0xMjowMCwgMTQ6MDAtMTc6MDAgKFVUQysxKTwvcD4KPC9kaXY+CjwvZGl2Pgo8L2Rpdj48L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTQiPgogICAgICAgIDxkaXYgY2xhc3M9IndlbGwgdGV4dC1jZW50ZXIgY2xlYXJmaXgiPgogIDxoND5TdWl2ZXogbCYjMzk7YWN0dWFsaXQmZWFjdXRlOyBkZSBsJiMzOTtJU088L2g0PgoKPHA+SW5zY3JpdmV6LXZvdXMgJmFncmF2ZTsgbm90cmUgTmV3c2xldHRlciAoZW4gYW5nbGFpcykgcG91ciBzdWl2cmUgbm9zIGFjdHVhbGl0JmVhY3V0ZTtzLCBwb2ludHMgZGUgdnVlIGV0IGluZm9ybWF0aW9ucyBzdXIgbm9zIHByb2R1aXRzLjwvcD48ZGl2PjxhIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiIGRhdGEtZmFuY3lib3g9IiIgZGF0YS10eXBlPSJpZnJhbWUiIGhyZWY9Imh0dHBzOi8vY29uZmlybXN1YnNjcmlwdGlvbi5jb20vaC9kLzM0MTJEQTc5OTNBQzNCN0MiPlN1YnNjcmliZTwvYT48L2Rpdj4KPHN0eWxlIHR5cGU9InRleHQvY3NzIj4uZmFuY3lib3gtc2xpZGUtLWlmcmFtZSAuZmFuY3lib3gtY29udGVudCB7CiB3aWR0aCAgOiA1MDBweDsKIGhlaWdodCA6IDYwMHB4OwogbWF4LXdpZHRoICA6IDgwJTsKIG1heC1oZWlnaHQgOiA4MCU7CiBtYXJnaW46IDA7Cn0KLmZhbmN5Ym94LXNsaWRlLS1pZnJhbWUgLmZhbmN5Ym94LWNvbnRlbnQgLmwtcGFnZS1jb250YWluZXIgewpwYWRkaW5nLXRvcDogMS41cmVtICFpbXBvcnRhbnQ7Cn0KPC9zdHlsZT48L2Rpdj48L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2Pgo8L3NlY3Rpb24+PGRpdiBjbGFzcz0ibmF2LWJyZWFkY3J1bWIgcHJpbnQtZm9vdGVyIGJnLWRhcmtncmF5Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTggc21hbGwiPgogICAgICAgICAgICAgIDwhLS0gQlJFQURDUlVNQiAtLT4KICAgICAgICAgICAgICA8b2wgY2xhc3M9ImJyZWFkY3J1bWIiPgogICAgPGxpPjxhIGhyZWY9Ii9mci9ob21lLmh0bWwiIHRpdGxlPSJQYWdlIGQnYWNjdWVpbCI+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24taG9tZSIgYXJpYS1oaWRkZW49InRydWUiPjwvc3Bhbj48L2E+PC9saT4KICAgIDxsaT4KICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdG9yZS5odG1sIj5TdG9yZTwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgPGxpPgogICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy1jYXRhbG9ndWUvYnJvd3NlLWJ5LWljcy5odG1sIiA+Q2F0YWxvZ3VlIGRlIG5vcm1lczwvYT4KPC9saT4KICAgICAgPGxpPgogICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy1jYXRhbG9ndWUvYnJvd3NlLWJ5LWljcy5odG1sIj5JQ1M8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgIDxsaT48YSBocmVmPSIvZnIvaWNzLzM1Lmh0bWwiPjM1PC9hPjwvbGk+CiAgICA8bGk+PGEgaHJlZj0iL2ZyL2ljcy8zNS4xMDAuaHRtbCI+MzUuMTAwPC9hPjwvbGk+CiAgICA8bGk+PGEgaHJlZj0iL2ZyL2ljcy8zNS4xMDAuNjAuaHRtbCI+MzUuMTAwLjYwPC9hPjwvbGk+PGxpPklTTy9JRUMgODgyNC0xOjIwMTU8L2xpPjwvb2w+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS00IGhpZGRlbi1wcmludCB0ZXh0LXJpZ2h0IHNtYWxsIj4KICAgICAgICAgICAgICA8YSByb2xlPSJidXR0b24iIGNsYXNzPSJhY2NvcmRpb24tdG9nZ2xlIGNvbGxhcHNlZCIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBocmVmPSIjY29sbGFwc2VTaXRlbWFwIiB0YXJnZXQ9Il9zZWxmIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIKICAgICAgICAgICAgICAgICBhcmlhLWNvbnRyb2xzPSJjb2xsYXBzZVNpdGVtYXAiPlBsYW4gZHUgc2l0ZTwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2xsYXBzZSBib3JkZXItdG9wIiBpZD0iY29sbGFwc2VTaXRlbWFwIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICA8IS0tIFNJVEVNQVAgLS0+CiAgICAgICAgICAgICAgPG5hdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJTaXRlbWFwIiBjbGFzcz0ic2l0ZW1hcC1mb290ZXIgY2xlYXJmaXggc21hbGwiIGlkPSJuYXYtc2l0ZW1hcCI+PHVsIHJvbGU9Im1lbnViYXIiIGNsYXNzPSJuYXYtbGV2ZWwxIGxpc3QtaW5saW5lLTUgY2xlYXJmaXgiPjxsaSByb2xlPSJub25lIiBjbGFzcz0iaGFzQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL3N0YW5kYXJkcy5odG1sIj5Ob3JtZXM8L2E+PHVsIHJvbGU9Im1lbnUiIGNsYXNzPSJuYXYtbGV2ZWwyIGxpc3QtdW5zdHlsZWQiPjxsaSByb2xlPSJub25lIiBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvYmVuZWZpdHMtb2Ytc3RhbmRhcmRzLmh0bWwiPkF2YW50YWdlczwvYT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9wb3B1bGFyLXN0YW5kYXJkcy5odG1sIj5MZXMgbm9ybWVzIGxlcyBwbHVzIGNvbm51ZXM8L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvY29uZm9ybWl0eS1hc3Nlc3NtZW50Lmh0bWwiPkNlcnRpZmljYXRpb24gJiBjb25mb3JtaXTDqTwvYT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9zZGdzLmh0bWwiPk9ERDwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0iaGFzQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvYWJvdXQtdXMuaHRtbCI+w4AgcHJvcG9zIGRlIGwnSVNPPC9hPjx1bCByb2xlPSJtZW51IiBjbGFzcz0ibmF2LWxldmVsMiBsaXN0LXVuc3R5bGVkIj48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL3doYXQtd2UtZG8uaHRtbCI+Tm9zIGFjdGl2aXTDqXM8L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvc3RydWN0dXJlLmh0bWwiPlN0cnVjdHVyZTwvYT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9tZW1iZXJzLmh0bWwiPk1lbWJyZXM8L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvc3RyYXRlZ3kyMDMwLmh0bWwiPlN0cmF0w6lnaWUgMjAzMDwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0iaGFzQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvbmV3cy5odG1sIj5BY3R1YWxpdMOpczwvYT48dWwgcm9sZT0ibWVudSIgY2xhc3M9Im5hdi1sZXZlbDIgbGlzdC11bnN0eWxlZCI+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL2V2ZW50cy5odG1sIj5NYW5pZmVzdGF0aW9uczwvYT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9tZWRpYS1raXQuaHRtbCI+RG9zc2llciBtw6lkaWFzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJoYXNDaGlsZHJlbiI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9kZXZlbG9waW5nLXN0YW5kYXJkcy5odG1sIj5QYXJ0aWNpcGVyPC9hPjx1bCByb2xlPSJtZW51IiBjbGFzcz0ibmF2LWxldmVsMiBsaXN0LXVuc3R5bGVkIj48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL3doby1kZXZlbG9wcy1zdGFuZGFyZHMuaHRtbCI+UXVpIMOpbGFib3JlIGxlcyBub3JtZXM8L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvZGVsaXZlcmFibGVzLWFsbC5odG1sIj5MaXZyYWJsZXM8L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvZ2V0LWludm9sdmVkLmh0bWwiPlBvdXJxdW9pIHPigJllbmdhZ2VyID88L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvQ2xpbWF0ZUFjdGlvbi5odG1sIj5LaXQgZOKAmWFjdGlvbiBwb3VyIGxlIGNsaW1hdDwvYT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9yZXNvdXJjZXMuaHRtbCI+UmVzc291cmNlczwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0iaGFzQ2hpbGRyZW4gaW5QYXRoIGxhc3RJbkxldmVsIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL3N0b3JlLmh0bWwiPlN0b3JlPC9hPjx1bCByb2xlPSJtZW51IiBjbGFzcz0ibmF2LWxldmVsMiBsaXN0LXVuc3R5bGVkIj48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4gaW5QYXRoIGFjdGl2ZSBmaXJzdEluTGV2ZWwiPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvc3RhbmRhcmRzLWNhdGFsb2d1ZS9icm93c2UtYnktaWNzLmh0bWwiID5DYXRhbG9ndWUgZGUgbm9ybWVzPC9hPjwvbGk+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIj48YSByb2xlPSJtZW51aXRlbSIgaHJlZj0iL2ZyL3B1YmxpY2F0aW9uLWxpc3QuaHRtbCI+UHVibGljYXRpb25zIGV0IHByb2R1aXRzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbmF2PjwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGZvb3RlciByb2xlPSJjb250ZW50aW5mbyIgYXJpYS1sYWJlbD0iRm9vdGVyIiBjbGFzcz0iZm9vdGVyLWlzbyBmb290ZXItZGFyayBiZy1kYXJrZXJncmF5Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyLWxpbmtzIGNlbnRlci1ibG9jayI+CiAgICAgICAgICAgIDwhLS0gRk9PVEVSIExJTktTIC0tPgogICAgICAgICAgICA8bmF2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IklubGluZSBOYXZpZ2F0aW9uIiAgPjx1bCByb2xlPSJtZW51YmFyIiBjbGFzcz0ibGlzdC1pbmxpbmUgY2xlYXJmaXggbmF2LWxldmVsMSI+PGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJub0NoaWxkcmVuIGZpcnN0SW5MZXZlbCI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9pc28tbmFtZS1hbmQtbG9nby5odG1sIj5Ob20gZXQgbG9nbyBkZSBsJ0lTTzwvYT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9wcml2YWN5LWFuZC1jb3B5cmlnaHQuaHRtbCI+Q29uZmlkZW50aWFsaXTDqSBldCBkcm9pdCBkJ2F1dGV1cjwvYT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci9jb29raWVzLmh0bWwiPlBvbGl0aXF1ZSByZWxhdGl2ZSBhdXggY29va2llczwvYT48L2xpPjxsaSByb2xlPSJub25lIiBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgcm9sZT0ibWVudWl0ZW0iIGhyZWY9Ii9mci93b3JraW5nLXdpdGgtaXNvLmh0bWwiID5FbXBsb2k8L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvZnJlcXVlbnRseS1hc2tlZC1xdWVzdGlvbnMtZmFxcy5odG1sIj5GQVE8L2E+PC9saT48bGkgcm9sZT0ibm9uZSIgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIHJvbGU9Im1lbnVpdGVtIiBocmVmPSIvZnIvY29udGFjdC1pc28uaHRtbCI+Q29udGFjdGVyIGwnSVNPPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbmF2PjwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyLXNvY2lhbCBzcy1pY29uIGNsZWFyZml4Ij4KICAgICAgICAgICAgPHVsIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cHM6Ly9zY2hlbWEub3JnL09yZ2FuaXphdGlvbiI+CiAgICAgICAgICAgICAgPGxpbmsgaXRlbXByb3A9InVybCIgaHJlZj0iaHR0cHM6Ly93d3cuaXNvLm9yZy8iPgogICAgICAgICAgICAgIDxsaT48YSBpdGVtcHJvcD0ic2FtZUFzIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2NvbXBhbnkvaXNvc3RhbmRhcmRzIiB0aXRsZT0iTGlua2VkaW4iPu+YkjwvYT48L2xpPgogICAgICAgICAgICAgIDxsaT48YSBpdGVtcHJvcD0ic2FtZUFzIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9pc29zdGFuZGFyZHMiIHRpdGxlPSJUd2l0dGVyIj7vmJE8L2E+PC9saT4KICAgICAgICAgICAgICA8bGk+PGEgaXRlbXByb3A9InNhbWVBcyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9pc29zdGFuZGFyZHMiIHRpdGxlPSJGYWNlYm9vayI+75iQPC9hPjwvbGk+CiAgICAgICAgICAgICAgPGxpPjxhIGl0ZW1wcm9wPSJzYW1lQXMiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiBocmVmPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS91c2VyL1BsYW5ldElTTyIgdGl0bGU9IllvdVR1YmUiPu+YsDwvYT48L2xpPgogICAgICAgICAgICAgIDxsaT48YSBpdGVtcHJvcD0ic2FtZUFzIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgaHJlZj0iaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9pc29zdGFuZGFyZHMiIHRpdGxlPSJJbnN0YWdyYW0iPu+ZgTwvYT48L2xpPgogICAgICAgICAgICAgIDxsaT48YSBpdGVtcHJvcD0ic2FtZUFzIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgaHJlZj0iaHR0cHM6Ly93d3cuZmxpY2tyLmNvbS9waG90b3MvaXNvc3RhbmRhcmRzIiB0aXRsZT0iRmxpY2tyIj7vmYA8L2E+PC9saT4KICAgICAgICAgICAgPC91bD4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPHAgY2xhc3M9ImxlYWQiPkxlIG1vbmRlIHZhIGxvaW4gcXVhbmQgaWwgcydhY2NvcmRlPC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTggY29sLW1kLW9mZnNldC0yIHB1bGwtbGVmdCI+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQteHMiPk5vdXMgbm91cyBlbmdhZ2VvbnMgw6AgY2UgcXVlIG5vdHJlIHNpdGUgV2ViIHNvaXQgYWNjZXNzaWJsZSDDoCB0b3VzLiBQb3VyIHRvdXRlIHF1ZXN0aW9uIG91IHN1Z2dlc3Rpb24gY29uY2VybmFudCBsJ2FjY2Vzc2liaWxpdMOpIGR1IHNpdGUsIDxhIGhyZWY9Im1haWx0bzp3ZWJtYXN0ZXJAaXNvLm9yZz9zdWJqZWN0PUFjY2Vzc2liaWxpdHkiIHN0eWxlPSJ3aGl0ZS1zcGFjZTogbm93cmFwIj5jb250YWN0ZXotbm91czwvYT4uPC9wPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LXNtIj48YSBocmVmPSIjY29weXJpZ2h0IiB0YXJnZXQ9Il9zZWxmIiBkYXRhLXRvZ2dsZT0iY29sbGFwc2UiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIiBhcmlhLWNvbnRyb2xzPSJjb3B5cmlnaHQiPsKpIFRvdXMgZHJvaXRzIHLDqXNlcnbDqXM8L2E+IDxzcGFuIGlkPSJjb3B5cmlnaHQiIGNsYXNzPSJjb2xsYXBzZSI+TGUgbWF0w6lyaWVsIHB1Ymxpw6kgc3VyIElTTy5vcmcgZXN0IHN1amV0IGF1eCBtw6ptZXMgY29uZGl0aW9ucyBlbiBtYXRpw6hyZSBkZSBkcm9pdHMgZOKAmWF1dGV1ciBxdWUgbGVzIHB1YmxpY2F0aW9ucyBkZSBs4oCZSVNPIGV0IHNvbiBlbXBsb2kgZXN0IGNvbmRpdGlvbm7DqSBwYXIgbOKAmWFjY2VwdGF0aW9uLCBwYXIgbOKAmXV0aWxpc2F0ZXVyLCBkZXMgY29uZGl0aW9ucyBkZSBs4oCZSVNPIGVuIG1hdGnDqHJlIGRlIGRyb2l0cyBk4oCZYXV0ZXVyIHLDqWdpc3NhbnQgbGVzIHB1YmxpY2F0aW9ucyBkZSBs4oCZSVNPLiBUb3V0ZSB1dGlsaXNhdGlvbiBkdSBtYXTDqXJpZWwgY29uY2VybsOpLCB5IGNvbXByaXMgc2EgcmVwcm9kdWN0aW9uIGludMOpZ3JhbGUgb3UgcGFydGllbGxlIHZlcnMgdW4gYXV0cmUgc2l0ZSBJbnRlcm5ldCwgcmVxdWllcnQgbOKAmWF1dG9yaXNhdGlvbiDDqWNyaXRlIGRlIGzigJlJU08uIFRvdXRlIGRlbWFuZGUgw6AgY2V0IGVmZmV0IGRvaXQgw6p0cmUgYWRyZXNzw6llIMOgIDxhIGhyZWY9Im1haWx0bzpjb3B5cmlnaHRAaXNvLm9yZyI+Y29weXJpZ2h0QGlzby5vcmc8L2E+Ljwvc3Bhbj48L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0idG9wYmFyIj4KICAgICAgICAgIDxkaXYgY2xhc3M9InRvcGJhci1jb250ZW50Ij4KICAgICAgICAgICAgPGEgY2xhc3M9ImxvZ28gaXNvbG9nbyBsb2dvLXhzIHRoZW1lLXJlZCBwb3dlcmVkYnkgcGFnZS1zY3JvbGwgbG9nby1zY3JvbGxUb3AiIGhyZWY9IiNwYWdlLXRvcCIgdGl0bGU9IlJldG91ciBlbiBoYXV0IGRlIHBhZ2UiPjwvYT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXNvbG9nby1wcmludCI+PGltZyBzcmM9Imh0dHBzOi8vY2RuLmlzby5vcmcvcmVzb3VyY2VzL3dvb2QvMy4zLjcvaW1nL2lzby9pc28tbG9nby1wcmludC5naWYiIGFsdD0iTG9nbyBJU08gcG91ciBpbXByZXNzaW9uIiAvPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwb3dlcmVkYnktdHh0Ij5Ew6l2ZWxvcHDDqSBwYXI8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9InJ1YmJlciI+PC9kaXY+CiAgICAgIDwvZm9vdGVyPgoKICAgIDwvbWFpbj4KCiAgICAKCjwvYm9keT4KPC9odG1sPg==
  recorded_at: Fri, 29 Jul 2022 11:00:57 GMT
recorded_with: VCR 6.1.0
