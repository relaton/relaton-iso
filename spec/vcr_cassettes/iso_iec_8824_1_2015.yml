---
http_interactions:
- request:
    method: post
    uri: https://jcl49wv5ar-dsn.algolia.net/1/indexes/all_en/query
    body:
      encoding: UTF-8
      string: '{"query":"ISO/IEC 8824-1:2015","hitsPerPage":100,"filters":"category:standard"}'
    headers:
      User-Agent:
      - Algolia for Ruby (2.1.1), Ruby (3.0.0)
      X-Algolia-Api-Key:
      - dd1b9e1ab383f4d4817d29cd5e96d3f0
      X-Algolia-Application-Id:
      - JCL49WV5AR
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 28 Oct 2021 11:58:44 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Alg-Pt:
      - '1'
      Accept-Encoding:
      - deflate, gzip
      Cache-Control:
      - no-store
      Access-Control-Allow-Origin:
      - "*"
      Timing-Allow-Origin:
      - "*"
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Disposition:
      - inline; filename=a.txt
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJoaXRzIjpbeyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNy82Ny83Njc1OSIsInV1aWQiOiI3ODg0OTQ3Ni0xMzkyLTQyOTktYjdjNi0xZmY4YjlhMmU1YzUiLCJ0aXRsZSI6IklTTy9JRUMgODgyNC0xOjIwMTUvQ29yIDM6MjAxOCBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBBYnN0cmFjdCBTeW50YXggTm90YXRpb24gT25lIChBU04uMSk6IFNwZWNpZmljYXRpb24gb2YgYmFzaWMgbm90YXRpb24g4oCUIFBhcnQgMTogIOKAlCBUZWNobmljYWwgQ29ycmlnZW5kdW0gMyIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMjEsIm9yZGVyIjoxMDAsIm9iamVjdElEIjoiNzY3NTlfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT44ODI0LTE6MjAxNTwvZW0+L0NvciAzOjIwMTggSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgQWJzdHJhY3QgU3ludGF4IE5vdGF0aW9uIE9uZSAoQVNOLjEpOiBTcGVjaWZpY2F0aW9uIG9mIGJhc2ljIG5vdGF0aW9uIOKAlCBQYXJ0IDE6ICDigJQgVGVjaG5pY2FsIENvcnJpZ2VuZHVtIDMiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiODgyNCIsIjEiLCI6IiwiMjAxNSJdfX19LHsiY2F0ZWdvcnkiOiJzdGFuZGFyZCIsInBhdGgiOiIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDcvNjUvNzY1MDMiLCJ1dWlkIjoiYzYwMWFlYjctNzRjMy00ZGZlLThlNzQtMWI0MDJiOGYyNzgxIiwidGl0bGUiOiJJU08vSUVDIDg4MjQtMToyMDE1L0NvciAyOjIwMTggSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgQWJzdHJhY3QgU3ludGF4IE5vdGF0aW9uIE9uZSAoQVNOLjEpOiBTcGVjaWZpY2F0aW9uIG9mIGJhc2ljIG5vdGF0aW9uIOKAlCBQYXJ0IDE6ICDigJQgVGVjaG5pY2FsIENvcnJpZ2VuZHVtIDIiLCJzdGF0dXMiOiJXaXRoZHJhd24iLCJ5ZWFyIjoyMDIxLCJvcmRlciI6MTAwLCJvYmplY3RJRCI6Ijc2NTAzXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+ODgyNC0xOjIwMTU8L2VtPi9Db3IgMjoyMDE4IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIEFic3RyYWN0IFN5bnRheCBOb3RhdGlvbiBPbmUgKEFTTi4xKTogU3BlY2lmaWNhdGlvbiBvZiBiYXNpYyBub3RhdGlvbiDigJQgUGFydCAxOiAg4oCUIFRlY2huaWNhbCBDb3JyaWdlbmR1bSAyIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjg4MjQiLCIxIiwiOiIsIjIwMTUiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA3LzY1Lzc2NTAyIiwidXVpZCI6ImQ5ODExYmRiLWExMTUtNDBlYS1hNjkxLTc1NzA1N2Q2YTExYyIsInRpdGxlIjoiSVNPL0lFQyA4ODI0LTE6MjAxNS9BbWQgMToyMDE5IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIEFic3RyYWN0IFN5bnRheCBOb3RhdGlvbiBPbmUgKEFTTi4xKTogU3BlY2lmaWNhdGlvbiBvZiBiYXNpYyBub3RhdGlvbiDigJQgUGFydCAxOiAg4oCUIEFtZW5kbWVudCAxOiBSZWxheGluZyBpbXBvcnRzIGNsYXVzZSB0byBhbGxvdyBpbXBvcnRhdGlvbiBvZiBkZWZpbml0aW9ucyBmcm9tIG5ldyB2ZXJzaW9ucyBvZiBhIGdpdmVuIG1vZHVsZSIsInN0YXR1cyI6IldpdGhkcmF3biIsInllYXIiOjIwMjEsIm9yZGVyIjoxMDAsIm9iamVjdElEIjoiNzY1MDJfMCIsIl9oaWdobGlnaHRSZXN1bHQiOnsidGl0bGUiOnsidmFsdWUiOiI8ZW0+SVNPPC9lbT4vPGVtPklFQzwvZW0+IDxlbT44ODI0LTE6MjAxNTwvZW0+L0FtZCAxOjIwMTkgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgQWJzdHJhY3QgU3ludGF4IE5vdGF0aW9uIE9uZSAoQVNOLjEpOiBTcGVjaWZpY2F0aW9uIG9mIGJhc2ljIG5vdGF0aW9uIOKAlCBQYXJ0IDE6ICDigJQgQW1lbmRtZW50IDE6IFJlbGF4aW5nIGltcG9ydHMgY2xhdXNlIHRvIGFsbG93IGltcG9ydGF0aW9uIG9mIGRlZmluaXRpb25zIGZyb20gbmV3IHZlcnNpb25zIG9mIGEgZ2l2ZW4gbW9kdWxlIiwibWF0Y2hMZXZlbCI6ImZ1bGwiLCJmdWxseUhpZ2hsaWdodGVkIjpmYWxzZSwibWF0Y2hlZFdvcmRzIjpbImlzbyIsImllYyIsIjg4MjQiLCIxIiwiOiIsIjIwMTUiXX19fSx7ImNhdGVnb3J5Ijoic3RhbmRhcmQiLCJwYXRoIjoiL3NpdGVzL2lzb29yZy9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA3LzMyLzczMjkzIiwidXVpZCI6ImYwMTQ3ZDhhLWIwYWQtNDIzMi1hZGJkLTE0MTczNmJkMzkyNCIsInRpdGxlIjoiSVNPL0lFQyA4ODI0LTE6MjAxNS9Db3IgMToyMDE3IEluZm9ybWF0aW9uIHRlY2hub2xvZ3kg4oCUIEFic3RyYWN0IFN5bnRheCBOb3RhdGlvbiBPbmUgKEFTTi4xKTogU3BlY2lmaWNhdGlvbiBvZiBiYXNpYyBub3RhdGlvbiDigJQgUGFydCAxOiAg4oCUIFRlY2huaWNhbCBDb3JyaWdlbmR1bSAxIiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAyMSwib3JkZXIiOjEwMCwib2JqZWN0SUQiOiI3MzI5M18wIiwiX2hpZ2hsaWdodFJlc3VsdCI6eyJ0aXRsZSI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjg4MjQtMToyMDE1PC9lbT4vQ29yIDE6MjAxNyBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBBYnN0cmFjdCBTeW50YXggTm90YXRpb24gT25lIChBU04uMSk6IFNwZWNpZmljYXRpb24gb2YgYmFzaWMgbm90YXRpb24g4oCUIFBhcnQgMTogIOKAlCBUZWNobmljYWwgQ29ycmlnZW5kdW0gMSIsIm1hdGNoTGV2ZWwiOiJmdWxsIiwiZnVsbHlIaWdobGlnaHRlZCI6ZmFsc2UsIm1hdGNoZWRXb3JkcyI6WyJpc28iLCJpZWMiLCI4ODI0IiwiMSIsIjoiLCIyMDE1Il19fX0seyJjYXRlZ29yeSI6InN0YW5kYXJkIiwicGF0aCI6Ii9zaXRlcy9pc29vcmcvY29udGVudHMvZGF0YS9zdGFuZGFyZC8wNi84My82ODM1MCIsInV1aWQiOiIyNTdhZDkzMy05YzEzLTQzNTgtYjNhYS03YTNlODljY2YzYTciLCJ0aXRsZSI6IklTTy9JRUMgODgyNC0xOjIwMTUgSW5mb3JtYXRpb24gdGVjaG5vbG9neSDigJQgQWJzdHJhY3QgU3ludGF4IE5vdGF0aW9uIE9uZSAoQVNOLjEpOiBTcGVjaWZpY2F0aW9uIG9mIGJhc2ljIG5vdGF0aW9uIOKAlCBQYXJ0IDE6Iiwic3RhdHVzIjoiV2l0aGRyYXduIiwieWVhciI6MjAyMSwib3JkZXIiOjEwMCwidGV4dCI6IklTTy9JRUMgODgyNC0xOjIwMTUgcHJvdmlkZXMgYSBzdGFuZGFyZCBub3RhdGlvbiBjYWxsZWQgQWJzdHJhY3QgU3ludGF4IE5vdGF0aW9uIE9uZSAoQVNOLjEpIHRoYXQgaXMgdXNlZCBmb3IgdGhlIGRlZmluaXRpb24gb2YgZGF0YSB0eXBlcywgdmFsdWVzLCBhbmQgY29uc3RyYWludHMgb24gZGF0YSB0eXBlcy4gSVNPL0lFQyA4ODI0LTE6MjAxNTogLSAgICAgIGRlZmluZXMgYSBudW1iZXIgb2Ygc2ltcGxlIHR5cGVzLCB3aXRoIHRoZWlyIHRhZ3MsIGFuZCBzcGVjaWZpZXMgYSBub3RhdGlvbiBmb3IgcmVmZXJlbmNpbmcgdGhlc2UgdHlwZXMgYW5kIGZvciBzcGVjaWZ5aW5nIHZhbHVlcyBvZiB0aGVzZSB0eXBlczsgLSAgICAgIGRlZmluZXMgbWVjaGFuaXNtcyBmb3IgY29uc3RydWN0aW5nIG5ldyB0eXBlcyBmcm9tIG1vcmUgYmFzaWMgdHlwZXMsIGFuZCBzcGVjaWZpZXMgYSBub3RhdGlvbiBmb3IgZGVmaW5pbmcgc3VjaCB0eXBlcyBhbmQgYXNzaWduaW5nIHRoZW0gdGFncywgYW5kIGZvciBzcGVjaWZ5aW5nIHZhbHVlcyBvZiB0aGVzZSB0eXBlczsgLSAgICAgIGRlZmluZXMgY2hhcmFjdGVyIHNldHMgKGJ5IHJlZmVyZW5jZSB0byBvdGhlciBSZWNvbW1lbmRhdGlvbnMgYW5kL29yIEludGVybmF0aW9uYWwgU3RhbmRhcmRzKSBmb3IgdXNlIHdpdGhpbiBBU04uMS4gVGhlIEFTTi4xIG5vdGF0aW9uIGNhbiBiZSBhcHBsaWVkIHdoZW5ldmVyIGl0IGlzIG5lY2Vzc2FyeSB0byBkZWZpbmUgdGhlIGFic3RyYWN0IHN5bnRheCBvZiBpbmZvcm1hdGlvbi4gVGhlIEFTTi4xIG5vdGF0aW9uIGlzIHJlZmVyZW5jZWQgYnkgb3RoZXIgc3RhbmRhcmRzIHdoaWNoIGRlZmluZSBlbmNvZGluZyBydWxlcyBmb3IgdGhlIEFTTi4xIHR5cGVzLiAiLCJvYmplY3RJRCI6IjY4MzUwXzAiLCJfaGlnaGxpZ2h0UmVzdWx0Ijp7InRpdGxlIjp7InZhbHVlIjoiPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+ODgyNC0xOjIwMTU8L2VtPiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IOKAlCBBYnN0cmFjdCBTeW50YXggTm90YXRpb24gT25lIChBU04uMSk6IFNwZWNpZmljYXRpb24gb2YgYmFzaWMgbm90YXRpb24g4oCUIFBhcnQgMToiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiODgyNCIsIjEiLCI6IiwiMjAxNSJdfSwidGV4dCI6eyJ2YWx1ZSI6IjxlbT5JU088L2VtPi88ZW0+SUVDPC9lbT4gPGVtPjg4MjQtMToyMDE1PC9lbT4gcHJvdmlkZXMgYSBzdGFuZGFyZCBub3RhdGlvbiBjYWxsZWQgQWJzdHJhY3QgU3ludGF4IE5vdGF0aW9uIE9uZSAoQVNOLjEpIHRoYXQgaXMgdXNlZCBmb3IgdGhlIGRlZmluaXRpb24gb2YgZGF0YSB0eXBlcywgdmFsdWVzLCBhbmQgY29uc3RyYWludHMgb24gZGF0YSB0eXBlcy4gPGVtPklTTzwvZW0+LzxlbT5JRUM8L2VtPiA8ZW0+ODgyNC0xOjIwMTU8L2VtPjogLSAgICAgIGRlZmluZXMgYSBudW1iZXIgb2Ygc2ltcGxlIHR5cGVzLCB3aXRoIHRoZWlyIHRhZ3MsIGFuZCBzcGVjaWZpZXMgYSBub3RhdGlvbiBmb3IgcmVmZXJlbmNpbmcgdGhlc2UgdHlwZXMgYW5kIGZvciBzcGVjaWZ5aW5nIHZhbHVlcyBvZiB0aGVzZSB0eXBlczsgLSAgICAgIGRlZmluZXMgbWVjaGFuaXNtcyBmb3IgY29uc3RydWN0aW5nIG5ldyB0eXBlcyBmcm9tIG1vcmUgYmFzaWMgdHlwZXMsIGFuZCBzcGVjaWZpZXMgYSBub3RhdGlvbiBmb3IgZGVmaW5pbmcgc3VjaCB0eXBlcyBhbmQgYXNzaWduaW5nIHRoZW0gdGFncywgYW5kIGZvciBzcGVjaWZ5aW5nIHZhbHVlcyBvZiB0aGVzZSB0eXBlczsgLSAgICAgIGRlZmluZXMgY2hhcmFjdGVyIHNldHMgKGJ5IHJlZmVyZW5jZSB0byBvdGhlciBSZWNvbW1lbmRhdGlvbnMgYW5kL29yIEludGVybmF0aW9uYWwgU3RhbmRhcmRzKSBmb3IgdXNlIHdpdGhpbiBBU04uMS4gVGhlIEFTTi4xIG5vdGF0aW9uIGNhbiBiZSBhcHBsaWVkIHdoZW5ldmVyIGl0IGlzIG5lY2Vzc2FyeSB0byBkZWZpbmUgdGhlIGFic3RyYWN0IHN5bnRheCBvZiBpbmZvcm1hdGlvbi4gVGhlIEFTTi4xIG5vdGF0aW9uIGlzIHJlZmVyZW5jZWQgYnkgb3RoZXIgc3RhbmRhcmRzIHdoaWNoIGRlZmluZSBlbmNvZGluZyBydWxlcyBmb3IgdGhlIEFTTi4xIHR5cGVzLiAiLCJtYXRjaExldmVsIjoiZnVsbCIsImZ1bGx5SGlnaGxpZ2h0ZWQiOmZhbHNlLCJtYXRjaGVkV29yZHMiOlsiaXNvIiwiaWVjIiwiODgyNCIsIjEiLCI6IiwiMjAxNSJdfX19XSwibmJIaXRzIjo1LCJwYWdlIjowLCJuYlBhZ2VzIjoxLCJoaXRzUGVyUGFnZSI6MTAwLCJleGhhdXN0aXZlTmJIaXRzIjp0cnVlLCJleGhhdXN0aXZlVHlwbyI6dHJ1ZSwicXVlcnkiOiJJU08vSUVDIDg4MjQtMToyMDE1IiwicGFyYW1zIjoicXVlcnk9SVNPJTJGSUVDKzg4MjQtMSUzQTIwMTUmaGl0c1BlclBhZ2U9MTAwJmZpbHRlcnM9Y2F0ZWdvcnklM0FzdGFuZGFyZCIsInByb2Nlc3NpbmdUaW1lTVMiOjF9
  recorded_at: Thu, 28 Oct 2021 11:58:44 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/06/83/68350.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=747131274.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=ED77708FF2BD4E4737FDECB4C9DD1ABF; Path=/; Secure; HttpOnly
      Location:
      - "/standard/68350.html"
      Content-Length:
      - '0'
      Date:
      - Thu, 28 Oct 2021 11:58:44 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 28 Oct 2021 11:58:44 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/68350.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=730354058.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=32E94C81BB90BC68B0DEB3BA8DBEA520; Path=/; Secure; HttpOnly
      Vary:
      - accept-encoding
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Thu, 28 Oct 2021 11:58:46 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Oct 2021 11:58:46 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/68350.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=730354058.36895.0000; path=/; Httponly;
        Secure
      - JSESSIONID=2992BBA49A8D828BE0397BE4467EA33B; Path=/; Secure; HttpOnly
      Vary:
      - accept-encoding
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Thu, 28 Oct 2021 11:58:47 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 28 Oct 2021 11:58:47 GMT
recorded_with: VCR 6.0.0
